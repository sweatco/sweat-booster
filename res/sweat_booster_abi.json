{
  "schema_version": "0.4.0",
  "metadata": {
    "name": "sweat-booster",
    "version": "0.1.0",
    "build": {
      "compiler": "rustc 1.80.0",
      "builder": "cargo-near 0.6.2"
    },
    "wasm_hash": "BqNuBc6cVFD9MAhNcdJdNbT4UnfBGyyyEE4qA49wrteE"
  },
  "body": {
    "functions": [
      {
        "name": "add_oracle",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        }
      },
      {
        "name": "contract_source_metadata",
        "kind": "view"
      },
      {
        "name": "mint_balance_booster",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "denomination",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "media_cid",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "media_hash",
              "type_schema": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Base64VecU8"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Token"
          }
        }
      },
      {
        "name": "new",
        "kind": "call",
        "modifiers": [
          "init"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "ft_account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "base_uri",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          ]
        }
      },
      {
        "name": "nft_burn",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "owner_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      {
        "name": "nft_metadata",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/NFTContractMetadata"
          }
        }
      },
      {
        "name": "nft_resolve_transfer",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "previous_owner_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "approved_account_ids",
              "type_schema": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "nft_supply_for_owner",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "string"
          }
        }
      },
      {
        "name": "nft_token",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "anyOf": [
              {
                "$ref": "#/definitions/Token"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      {
        "name": "nft_tokens",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "from_index",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "limit",
              "type_schema": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Token"
            }
          }
        }
      },
      {
        "name": "nft_tokens_for_owner",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "from_index",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "limit",
              "type_schema": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Token"
            }
          }
        }
      },
      {
        "name": "nft_total_supply",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "string"
          }
        }
      },
      {
        "name": "nft_transfer",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "approval_id",
              "type_schema": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              }
            },
            {
              "name": "memo",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          ]
        }
      },
      {
        "name": "nft_transfer_call",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "approval_id",
              "type_schema": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              }
            },
            {
              "name": "memo",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueBoolean"
          }
        }
      },
      {
        "name": "on_redeem_transfer",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "callbacks": [
          {
            "serialization_type": "json",
            "type_schema": {
              "type": "null"
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueString"
          }
        }
      },
      {
        "name": "redeem",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueString"
          }
        }
      },
      {
        "name": "set_base_uri",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "base_uri",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        }
      }
    ],
    "root_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string",
      "definitions": {
        "AccountId": {
          "description": "NEAR Account Identifier.\n\nThis is a unique, syntactically valid, human-readable account identifier on the NEAR network.\n\n[See the crate-level docs for information about validation.](index.html#account-id-rules)\n\nAlso see [Error kind precedence](AccountId#error-kind-precedence).\n\n## Examples\n\n``` use near_account_id::AccountId;\n\nlet alice: AccountId = \"alice.near\".parse().unwrap();\n\nassert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ```",
          "type": "string"
        },
        "Base64VecU8": {
          "description": "Helper class to serialize/deserialize `Vec<u8>` to base64 string.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "NFTContractMetadata": {
          "description": "Metadata for the NFT contract itself.",
          "type": "object",
          "required": [
            "name",
            "spec",
            "symbol"
          ],
          "properties": {
            "base_uri": {
              "type": [
                "string",
                "null"
              ]
            },
            "icon": {
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "type": "string"
            },
            "reference": {
              "type": [
                "string",
                "null"
              ]
            },
            "reference_hash": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Base64VecU8"
                },
                {
                  "type": "null"
                }
              ]
            },
            "spec": {
              "type": "string"
            },
            "symbol": {
              "type": "string"
            }
          }
        },
        "PromiseOrValueBoolean": {
          "type": "boolean"
        },
        "PromiseOrValueString": {
          "type": "string"
        },
        "Token": {
          "type": "object",
          "required": [
            "owner_id",
            "token_id"
          ],
          "properties": {
            "approved_account_ids": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "metadata": {
              "anyOf": [
                {
                  "$ref": "#/definitions/TokenMetadata"
                },
                {
                  "type": "null"
                }
              ]
            },
            "owner_id": {
              "$ref": "#/definitions/AccountId"
            },
            "token_id": {
              "type": "string"
            }
          }
        },
        "TokenMetadata": {
          "type": "object",
          "properties": {
            "copies": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "expires_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "extra": {
              "type": [
                "string",
                "null"
              ]
            },
            "issued_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "media": {
              "type": [
                "string",
                "null"
              ]
            },
            "media_hash": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Base64VecU8"
                },
                {
                  "type": "null"
                }
              ]
            },
            "reference": {
              "type": [
                "string",
                "null"
              ]
            },
            "reference_hash": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Base64VecU8"
                },
                {
                  "type": "null"
                }
              ]
            },
            "starts_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "title": {
              "type": [
                "string",
                "null"
              ]
            },
            "updated_at": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      }
    }
  }
}